---
- name: Install additional apt packages
  apt:
    pkg:
    - sshpass
    - unzip
    update_cache: yes

- name: Install Ansible and necessary modules
  pip:
    name:
      - ansible
      - openshift
      - boto3

- name: Create user 'jenkins' and add it to 'docker' group
  user: 
    name: jenkins
    state: present
    create_home: yes 
    shell: /bin/bash
    append: yes
    groups: docker

# - name: Allow user 'jenkins' to have passwordless sudo
#   become: yes
#   lineinfile:
#     dest: /etc/sudoers
#     line: "jenkins ALL=(ALL) NOPASSWD: ALL"
#     validate: 'visudo -cf %s'

- name: Configuring Ansible
  block:
    - name: Check if '.ansible' exist
      stat:
        path: /home/jenkins/.ansible
      register: ansible_dir

    - name: Create a directory '/home/jenkins/.ansible/'
      become: yes
      file:
        path: /home/jenkins/.ansible
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0775
      when: not ansible_dir.stat.exists

    - name: Copy '.ansible.cfg' into Jenkins home dir
      become: yes
      copy:
        src: ../files/.ansible.cfg
        dest: /home/jenkins/.ansible.cfg
        owner: jenkins
        group: jenkins
        mode: 0760
      when: not ansible_dir.stat.exists

    - name: Copy dynamic inventory into '.ansible' dir
      become: yes
      copy:
        src: ../files/hosts_aws_ec2.yml
        dest: /home/jenkins/.ansible/hosts_aws_ec2.yml
        owner: jenkins
        group: jenkins
        mode: 0664
      when: not ansible_dir.stat.exists

    - name: Copy SSH key into '.ansible' dir
      become: yes
      copy:
        src: ~/.ssh/id_rsa
        dest: /home/jenkins/.ansible/id_rsa
        owner: jenkins
        group: jenkins
        mode: 0600
      when: not ansible_dir.stat.exists

- name: Installing AWS CLI
  block:
    - name: Check if AWS CLI is installed
      stat:
        path: /usr/local/bin/aws
      register: aws_cli

    - name: Extract 'awscli-exe-linux-x86_64.zip'
      become: yes
      unarchive:
        src: ../files/awscli-exe-linux-x86_64.zip
        dest: "$HOME"
      when: not aws_cli.stat.exists
    
    - name: Install AWS CLI
      become: yes
      command: ./aws/install
      args:
        chdir: "$HOME"
      when: not aws_cli.stat.exists

- name: Configure AWS CLI credentials for Jenkins
  block:
    - name: Check if AWS creds is configured
      stat:
        path: /home/jenkins/.aws
      register: aws_creds

    - name: Extract 'aws.zip' to Jenkins home dir
      become: yes
      unarchive:
        src: ../files/aws.zip
        dest: /home/jenkins
      when: not aws_creds.stat.exists

    - name: Change ownership of '.aws' dir
      become: yes
      file:
        path: /home/jenkins/.aws
        state: directory
        recurse: yes
        owner: jenkins
        group: jenkins
        mode: 0770
      when: not aws_creds.stat.exists

- name: Check if AWS 'collection' is installed
  stat:
    path: /home/jenkins/.ansible/collections
  register: collect

- name: Install 'collection' for deploy in Kubernetes cluster
  become: yes
  command: ansible-galaxy collection install kubernetes.core -p /home/jenkins/.ansible/collections
  ignore_errors: yes
  when: not collect.stat.exists

- name: Change ownership of 'collections' dir
  become: yes
  file:
    path: /home/jenkins/.ansible/collections
    state: directory
    recurse: yes
    owner: jenkins
    group: jenkins
    mode: 0775
  when: not collect.stat.exists

- name: Check if sample files exist
  stat:
    path: /home/jenkins/deploy_to_kubernetes.yml
  register: test_files

- name: Copy sample files for testing
  become: yes
  copy:
    src: "../files/{{ item }}"
    dest: "/home/jenkins/{{ item }}"
    owner: jenkins
    group: jenkins
    mode: 0664
  with_items:
    - deploy_to_kubernetes.yml
    - deploy_to_kubernetes-1.yml
    - deploy_to_kubernetes-2.yml
    - service.yml
  when: not test_files.stat.exists