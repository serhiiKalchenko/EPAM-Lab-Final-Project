---
- name: Check if '.kube' exist
  stat:
    path: "/home/{{ ansible_ssh_user }}/.kube"
  register: kube_dir

- name: Copy 'kube-config.yml'
  become: yes
  copy:
    src: ../files/kube-config.yml
    dest: "$HOME"
  when: not kube_dir.stat.exists

- name: Initialize a Control node (cluster)
  become: yes
  shell: kubeadm init --config kube-config.yml >> cluster_initialized.txt
  args:
    chdir: "$HOME"
    creates: cluster_initialized.txt
  when: not kube_dir.stat.exists

- name: Create .kube directory
  become: yes
  file:
    path: "/home/{{ ansible_ssh_user }}/.kube"
    state: directory
    mode: 0755
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
  when: not kube_dir.stat.exists

- name: Create a kube config
  become: yes
  copy:
    remote_src: yes
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_ssh_user }}/.kube/config"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
  when: not kube_dir.stat.exists

- name: Setup a Pod network
  become: no
  command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  when: not kube_dir.stat.exists
  

# Get 'kubeadm join' command and set it as fact to all Worker nodes 
- name: Get join command on Control node
  become: no
  command: kubeadm token create --print-join-command
  register: join_cmd

- name: Set 'kubernetes_join_command' to all Worker nodes
  set_fact:
    kubernetes_join_command: "{{ join_cmd.stdout }}"
  when: join_cmd.stdout is defined
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['tag_Role_worker'] }}"
